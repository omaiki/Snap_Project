<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js" type="text/javascript"></script>


<body>

    <form id = "form1">
    Enter Link: <input type="text" name="userInput">
    <input type="button" onclick="getUserLink()" value ="Search">
    </form>
    <!--<button onclick="getUserLink()">rawz</button>-->



    <video id = "video" width="768" height="432" controls= true>

    </video>


    <button onclick="shoot()" style="width: 64px;border: solid 2px #ccc;">Capture</button><br/>

    <canvas id="test">
    <div id="output" style="display: inline-block; top: 4px; position: relative ;border: dotted 1px #ccc; padding: 2px;"></div>
    </canvas>


</body>

<style>
    body {
    text-align: center;
    }
    /*#output {
    display: inline-block;
    top: 4px;
    position: relative;
    border: dotted 1px #ccc;
    padding: 2px;
    }*/
</style>


<!-- function is converting youtube url to embedded video player using javascript and mp4 download website  -->
<script>

    console.clear();
    var youtubeLink;
    var vidID;

    var video = document.getElementById('video');
    var source = document.createElement('source');

    function getUserLink() {
    var x;
        x = document.getElementById("form1");
        youtubeLink = x.elements["userInput"].value;


        var mp4url = "http://www.youtubeinmp4.com/redirect.php?video=";



       var isYoutube = youtubeLink && youtubeLink.match(/(?:youtu|youtube)(?:\.com|\.be)\/([\w\W]+)/i);

       if (isYoutube) {
           var id = isYoutube[1].match(/watch\?v=|[\w\W]+/gi);
           id = (id.length > 1) ? id.splice(1) : id;
           id = id.toString();
           vidID = id;
        }

    //    document.write(mp4url + youtubeLink);
    //    var newVid = mp4url+youtubeLink;


    //
        source.setAttribute('src', mp4url+vidID);
        video.appendChild(source);
        video.load();

    } //END getUserLink()

</script>


<script>



/**
 * Captures a image frame from the provided video element.
 *
 * @param {Video} video HTML5 video element from where the image frame will be captured.
 * @param {Number} scaleFactor Factor to scale the canvas element that will be return. This is an optional parameter.
 *
 * @return {Canvas}
 */


    var videoId = 'video';
    var scaleFactor = 0.5;
    var snapshots = [];


    function capture(video, scaleFactor) {
    if(scaleFactor == null){
        scaleFactor = 1;
    }
    var w = video.videoWidth * scaleFactor;
    var h = video.videoHeight * scaleFactor;
    var canvas = document.createElement('canvas');
        canvas.width  = w;
        canvas.height = h;
    var ctx = canvas.getContext('2d');
        ctx.drawImage(video, 0, 0, w, h);
    return canvas;
}

// creates canvas element

/**
 * Invokes the <code>capture</code> function and attaches the canvas element to the DOM.
 */
    function shoot(){
    var video  = document.getElementById(videoId);
    var output = document.getElementById('output');
    var canvas = capture(video, scaleFactor);
    //     canvas.onclick = function(){
    //         window.open(this.toDataURL());
    //     };
    snapshots.unshift(canvas);
    output.innerHTML = '';
    for(var i=0; i<4; i++){
        output.appendChild(snapshots[i]);
    }
}

// puts video into delegated space on button press --> (snapshot)

</script>




